using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

#pragma warning disable CA1814 // Prefer jagged arrays over multidimensional

namespace Run_Partner.Migrations
{
    /// <inheritdoc />
    public partial class photosadded : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.InsertData(
                table: "Photos",
                columns: new[] { "Id", "AppUserId", "IsMain", "PublicId", "Url" },
                values: new object[,]
                {
                    { -8, -8, true, null, "https://randomuser.me/api/portraits/men/30.jpg" },
                    { -7, -7, true, null, "https://randomuser.me/api/portraits/men/20.jpg" },
                    { -6, -6, true, null, "https://randomuser.me/api/portraits/men/10.jpg" },
                    { -5, -5, true, null, "https://randomuser.me/api/portraits/women/50.jpg" },
                    { -4, -4, true, null, "https://randomuser.me/api/portraits/women/40.jpg" },
                    { -3, -3, true, null, "https://randomuser.me/api/portraits/women/30.jpg" },
                    { -2, -2, true, null, "https://randomuser.me/api/portraits/women/20.jpg" },
                    { -1, -1, true, null, "https://randomuser.me/api/portraits/women/10.jpg" }
                });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: -8,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 56, 198, 119, 175, 165, 243, 108, 38, 152, 192, 32, 107, 100, 39, 110, 141, 5, 136, 24, 176, 117, 87, 136, 57, 238, 9, 170, 85, 168, 115, 110, 191, 177, 251, 193, 220, 140, 224, 159, 30, 49, 134, 75, 237, 234, 89, 122, 170, 153, 26, 82, 123, 87, 33, 247, 147, 112, 79, 0, 124, 125, 125, 144, 147 }, new byte[] { 53, 135, 166, 130, 107, 233, 222, 115, 63, 103, 195, 238, 23, 48, 108, 185, 234, 189, 49, 107, 56, 95, 25, 63, 162, 35, 10, 146, 185, 192, 247, 228, 140, 153, 78, 81, 72, 47, 124, 137, 11, 9, 121, 89, 87, 105, 108, 46, 28, 125, 74, 225, 9, 213, 7, 156, 53, 125, 118, 182, 119, 233, 27, 95, 118, 118, 243, 140, 229, 118, 37, 47, 155, 100, 179, 213, 33, 33, 180, 125, 244, 213, 52, 10, 76, 31, 80, 202, 96, 70, 51, 160, 148, 110, 67, 237, 13, 50, 41, 44, 8, 117, 135, 199, 170, 199, 147, 149, 94, 46, 77, 223, 170, 163, 144, 99, 26, 186, 50, 93, 151, 216, 246, 140, 176, 215, 226, 64 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: -7,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 56, 198, 119, 175, 165, 243, 108, 38, 152, 192, 32, 107, 100, 39, 110, 141, 5, 136, 24, 176, 117, 87, 136, 57, 238, 9, 170, 85, 168, 115, 110, 191, 177, 251, 193, 220, 140, 224, 159, 30, 49, 134, 75, 237, 234, 89, 122, 170, 153, 26, 82, 123, 87, 33, 247, 147, 112, 79, 0, 124, 125, 125, 144, 147 }, new byte[] { 53, 135, 166, 130, 107, 233, 222, 115, 63, 103, 195, 238, 23, 48, 108, 185, 234, 189, 49, 107, 56, 95, 25, 63, 162, 35, 10, 146, 185, 192, 247, 228, 140, 153, 78, 81, 72, 47, 124, 137, 11, 9, 121, 89, 87, 105, 108, 46, 28, 125, 74, 225, 9, 213, 7, 156, 53, 125, 118, 182, 119, 233, 27, 95, 118, 118, 243, 140, 229, 118, 37, 47, 155, 100, 179, 213, 33, 33, 180, 125, 244, 213, 52, 10, 76, 31, 80, 202, 96, 70, 51, 160, 148, 110, 67, 237, 13, 50, 41, 44, 8, 117, 135, 199, 170, 199, 147, 149, 94, 46, 77, 223, 170, 163, 144, 99, 26, 186, 50, 93, 151, 216, 246, 140, 176, 215, 226, 64 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: -6,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 56, 198, 119, 175, 165, 243, 108, 38, 152, 192, 32, 107, 100, 39, 110, 141, 5, 136, 24, 176, 117, 87, 136, 57, 238, 9, 170, 85, 168, 115, 110, 191, 177, 251, 193, 220, 140, 224, 159, 30, 49, 134, 75, 237, 234, 89, 122, 170, 153, 26, 82, 123, 87, 33, 247, 147, 112, 79, 0, 124, 125, 125, 144, 147 }, new byte[] { 53, 135, 166, 130, 107, 233, 222, 115, 63, 103, 195, 238, 23, 48, 108, 185, 234, 189, 49, 107, 56, 95, 25, 63, 162, 35, 10, 146, 185, 192, 247, 228, 140, 153, 78, 81, 72, 47, 124, 137, 11, 9, 121, 89, 87, 105, 108, 46, 28, 125, 74, 225, 9, 213, 7, 156, 53, 125, 118, 182, 119, 233, 27, 95, 118, 118, 243, 140, 229, 118, 37, 47, 155, 100, 179, 213, 33, 33, 180, 125, 244, 213, 52, 10, 76, 31, 80, 202, 96, 70, 51, 160, 148, 110, 67, 237, 13, 50, 41, 44, 8, 117, 135, 199, 170, 199, 147, 149, 94, 46, 77, 223, 170, 163, 144, 99, 26, 186, 50, 93, 151, 216, 246, 140, 176, 215, 226, 64 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: -5,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 56, 198, 119, 175, 165, 243, 108, 38, 152, 192, 32, 107, 100, 39, 110, 141, 5, 136, 24, 176, 117, 87, 136, 57, 238, 9, 170, 85, 168, 115, 110, 191, 177, 251, 193, 220, 140, 224, 159, 30, 49, 134, 75, 237, 234, 89, 122, 170, 153, 26, 82, 123, 87, 33, 247, 147, 112, 79, 0, 124, 125, 125, 144, 147 }, new byte[] { 53, 135, 166, 130, 107, 233, 222, 115, 63, 103, 195, 238, 23, 48, 108, 185, 234, 189, 49, 107, 56, 95, 25, 63, 162, 35, 10, 146, 185, 192, 247, 228, 140, 153, 78, 81, 72, 47, 124, 137, 11, 9, 121, 89, 87, 105, 108, 46, 28, 125, 74, 225, 9, 213, 7, 156, 53, 125, 118, 182, 119, 233, 27, 95, 118, 118, 243, 140, 229, 118, 37, 47, 155, 100, 179, 213, 33, 33, 180, 125, 244, 213, 52, 10, 76, 31, 80, 202, 96, 70, 51, 160, 148, 110, 67, 237, 13, 50, 41, 44, 8, 117, 135, 199, 170, 199, 147, 149, 94, 46, 77, 223, 170, 163, 144, 99, 26, 186, 50, 93, 151, 216, 246, 140, 176, 215, 226, 64 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: -4,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 56, 198, 119, 175, 165, 243, 108, 38, 152, 192, 32, 107, 100, 39, 110, 141, 5, 136, 24, 176, 117, 87, 136, 57, 238, 9, 170, 85, 168, 115, 110, 191, 177, 251, 193, 220, 140, 224, 159, 30, 49, 134, 75, 237, 234, 89, 122, 170, 153, 26, 82, 123, 87, 33, 247, 147, 112, 79, 0, 124, 125, 125, 144, 147 }, new byte[] { 53, 135, 166, 130, 107, 233, 222, 115, 63, 103, 195, 238, 23, 48, 108, 185, 234, 189, 49, 107, 56, 95, 25, 63, 162, 35, 10, 146, 185, 192, 247, 228, 140, 153, 78, 81, 72, 47, 124, 137, 11, 9, 121, 89, 87, 105, 108, 46, 28, 125, 74, 225, 9, 213, 7, 156, 53, 125, 118, 182, 119, 233, 27, 95, 118, 118, 243, 140, 229, 118, 37, 47, 155, 100, 179, 213, 33, 33, 180, 125, 244, 213, 52, 10, 76, 31, 80, 202, 96, 70, 51, 160, 148, 110, 67, 237, 13, 50, 41, 44, 8, 117, 135, 199, 170, 199, 147, 149, 94, 46, 77, 223, 170, 163, 144, 99, 26, 186, 50, 93, 151, 216, 246, 140, 176, 215, 226, 64 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: -3,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 56, 198, 119, 175, 165, 243, 108, 38, 152, 192, 32, 107, 100, 39, 110, 141, 5, 136, 24, 176, 117, 87, 136, 57, 238, 9, 170, 85, 168, 115, 110, 191, 177, 251, 193, 220, 140, 224, 159, 30, 49, 134, 75, 237, 234, 89, 122, 170, 153, 26, 82, 123, 87, 33, 247, 147, 112, 79, 0, 124, 125, 125, 144, 147 }, new byte[] { 53, 135, 166, 130, 107, 233, 222, 115, 63, 103, 195, 238, 23, 48, 108, 185, 234, 189, 49, 107, 56, 95, 25, 63, 162, 35, 10, 146, 185, 192, 247, 228, 140, 153, 78, 81, 72, 47, 124, 137, 11, 9, 121, 89, 87, 105, 108, 46, 28, 125, 74, 225, 9, 213, 7, 156, 53, 125, 118, 182, 119, 233, 27, 95, 118, 118, 243, 140, 229, 118, 37, 47, 155, 100, 179, 213, 33, 33, 180, 125, 244, 213, 52, 10, 76, 31, 80, 202, 96, 70, 51, 160, 148, 110, 67, 237, 13, 50, 41, 44, 8, 117, 135, 199, 170, 199, 147, 149, 94, 46, 77, 223, 170, 163, 144, 99, 26, 186, 50, 93, 151, 216, 246, 140, 176, 215, 226, 64 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: -2,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 56, 198, 119, 175, 165, 243, 108, 38, 152, 192, 32, 107, 100, 39, 110, 141, 5, 136, 24, 176, 117, 87, 136, 57, 238, 9, 170, 85, 168, 115, 110, 191, 177, 251, 193, 220, 140, 224, 159, 30, 49, 134, 75, 237, 234, 89, 122, 170, 153, 26, 82, 123, 87, 33, 247, 147, 112, 79, 0, 124, 125, 125, 144, 147 }, new byte[] { 53, 135, 166, 130, 107, 233, 222, 115, 63, 103, 195, 238, 23, 48, 108, 185, 234, 189, 49, 107, 56, 95, 25, 63, 162, 35, 10, 146, 185, 192, 247, 228, 140, 153, 78, 81, 72, 47, 124, 137, 11, 9, 121, 89, 87, 105, 108, 46, 28, 125, 74, 225, 9, 213, 7, 156, 53, 125, 118, 182, 119, 233, 27, 95, 118, 118, 243, 140, 229, 118, 37, 47, 155, 100, 179, 213, 33, 33, 180, 125, 244, 213, 52, 10, 76, 31, 80, 202, 96, 70, 51, 160, 148, 110, 67, 237, 13, 50, 41, 44, 8, 117, 135, 199, 170, 199, 147, 149, 94, 46, 77, 223, 170, 163, 144, 99, 26, 186, 50, 93, 151, 216, 246, 140, 176, 215, 226, 64 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: -1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 56, 198, 119, 175, 165, 243, 108, 38, 152, 192, 32, 107, 100, 39, 110, 141, 5, 136, 24, 176, 117, 87, 136, 57, 238, 9, 170, 85, 168, 115, 110, 191, 177, 251, 193, 220, 140, 224, 159, 30, 49, 134, 75, 237, 234, 89, 122, 170, 153, 26, 82, 123, 87, 33, 247, 147, 112, 79, 0, 124, 125, 125, 144, 147 }, new byte[] { 53, 135, 166, 130, 107, 233, 222, 115, 63, 103, 195, 238, 23, 48, 108, 185, 234, 189, 49, 107, 56, 95, 25, 63, 162, 35, 10, 146, 185, 192, 247, 228, 140, 153, 78, 81, 72, 47, 124, 137, 11, 9, 121, 89, 87, 105, 108, 46, 28, 125, 74, 225, 9, 213, 7, 156, 53, 125, 118, 182, 119, 233, 27, 95, 118, 118, 243, 140, 229, 118, 37, 47, 155, 100, 179, 213, 33, 33, 180, 125, 244, 213, 52, 10, 76, 31, 80, 202, 96, 70, 51, 160, 148, 110, 67, 237, 13, 50, 41, 44, 8, 117, 135, 199, 170, 199, 147, 149, 94, 46, 77, 223, 170, 163, 144, 99, 26, 186, 50, 93, 151, 216, 246, 140, 176, 215, 226, 64 } });
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DeleteData(
                table: "Photos",
                keyColumn: "Id",
                keyValue: -8);

            migrationBuilder.DeleteData(
                table: "Photos",
                keyColumn: "Id",
                keyValue: -7);

            migrationBuilder.DeleteData(
                table: "Photos",
                keyColumn: "Id",
                keyValue: -6);

            migrationBuilder.DeleteData(
                table: "Photos",
                keyColumn: "Id",
                keyValue: -5);

            migrationBuilder.DeleteData(
                table: "Photos",
                keyColumn: "Id",
                keyValue: -4);

            migrationBuilder.DeleteData(
                table: "Photos",
                keyColumn: "Id",
                keyValue: -3);

            migrationBuilder.DeleteData(
                table: "Photos",
                keyColumn: "Id",
                keyValue: -2);

            migrationBuilder.DeleteData(
                table: "Photos",
                keyColumn: "Id",
                keyValue: -1);

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: -8,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 192, 22, 160, 209, 46, 155, 228, 105, 183, 200, 84, 65, 56, 130, 100, 230, 170, 78, 179, 73, 135, 161, 99, 251, 166, 32, 199, 12, 98, 167, 130, 105, 108, 105, 52, 168, 44, 206, 79, 149, 19, 103, 218, 160, 97, 108, 69, 74, 255, 179, 125, 87, 49, 52, 75, 238, 228, 164, 14, 101, 110, 93, 123, 184 }, new byte[] { 120, 69, 127, 25, 82, 57, 163, 151, 151, 210, 92, 245, 90, 172, 206, 120, 115, 61, 86, 237, 54, 253, 225, 32, 240, 180, 159, 46, 42, 131, 128, 127, 119, 18, 128, 107, 233, 120, 59, 109, 6, 65, 80, 1, 21, 250, 99, 62, 51, 104, 216, 112, 75, 39, 200, 203, 225, 54, 109, 152, 252, 12, 80, 210, 80, 26, 139, 86, 102, 183, 247, 85, 172, 104, 81, 163, 226, 227, 131, 232, 145, 93, 102, 171, 249, 209, 1, 183, 198, 214, 218, 95, 178, 154, 199, 164, 65, 12, 118, 118, 119, 63, 89, 166, 159, 54, 152, 238, 11, 204, 84, 216, 126, 109, 110, 132, 161, 86, 75, 5, 24, 77, 25, 19, 118, 239, 223, 209 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: -7,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 192, 22, 160, 209, 46, 155, 228, 105, 183, 200, 84, 65, 56, 130, 100, 230, 170, 78, 179, 73, 135, 161, 99, 251, 166, 32, 199, 12, 98, 167, 130, 105, 108, 105, 52, 168, 44, 206, 79, 149, 19, 103, 218, 160, 97, 108, 69, 74, 255, 179, 125, 87, 49, 52, 75, 238, 228, 164, 14, 101, 110, 93, 123, 184 }, new byte[] { 120, 69, 127, 25, 82, 57, 163, 151, 151, 210, 92, 245, 90, 172, 206, 120, 115, 61, 86, 237, 54, 253, 225, 32, 240, 180, 159, 46, 42, 131, 128, 127, 119, 18, 128, 107, 233, 120, 59, 109, 6, 65, 80, 1, 21, 250, 99, 62, 51, 104, 216, 112, 75, 39, 200, 203, 225, 54, 109, 152, 252, 12, 80, 210, 80, 26, 139, 86, 102, 183, 247, 85, 172, 104, 81, 163, 226, 227, 131, 232, 145, 93, 102, 171, 249, 209, 1, 183, 198, 214, 218, 95, 178, 154, 199, 164, 65, 12, 118, 118, 119, 63, 89, 166, 159, 54, 152, 238, 11, 204, 84, 216, 126, 109, 110, 132, 161, 86, 75, 5, 24, 77, 25, 19, 118, 239, 223, 209 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: -6,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 192, 22, 160, 209, 46, 155, 228, 105, 183, 200, 84, 65, 56, 130, 100, 230, 170, 78, 179, 73, 135, 161, 99, 251, 166, 32, 199, 12, 98, 167, 130, 105, 108, 105, 52, 168, 44, 206, 79, 149, 19, 103, 218, 160, 97, 108, 69, 74, 255, 179, 125, 87, 49, 52, 75, 238, 228, 164, 14, 101, 110, 93, 123, 184 }, new byte[] { 120, 69, 127, 25, 82, 57, 163, 151, 151, 210, 92, 245, 90, 172, 206, 120, 115, 61, 86, 237, 54, 253, 225, 32, 240, 180, 159, 46, 42, 131, 128, 127, 119, 18, 128, 107, 233, 120, 59, 109, 6, 65, 80, 1, 21, 250, 99, 62, 51, 104, 216, 112, 75, 39, 200, 203, 225, 54, 109, 152, 252, 12, 80, 210, 80, 26, 139, 86, 102, 183, 247, 85, 172, 104, 81, 163, 226, 227, 131, 232, 145, 93, 102, 171, 249, 209, 1, 183, 198, 214, 218, 95, 178, 154, 199, 164, 65, 12, 118, 118, 119, 63, 89, 166, 159, 54, 152, 238, 11, 204, 84, 216, 126, 109, 110, 132, 161, 86, 75, 5, 24, 77, 25, 19, 118, 239, 223, 209 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: -5,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 192, 22, 160, 209, 46, 155, 228, 105, 183, 200, 84, 65, 56, 130, 100, 230, 170, 78, 179, 73, 135, 161, 99, 251, 166, 32, 199, 12, 98, 167, 130, 105, 108, 105, 52, 168, 44, 206, 79, 149, 19, 103, 218, 160, 97, 108, 69, 74, 255, 179, 125, 87, 49, 52, 75, 238, 228, 164, 14, 101, 110, 93, 123, 184 }, new byte[] { 120, 69, 127, 25, 82, 57, 163, 151, 151, 210, 92, 245, 90, 172, 206, 120, 115, 61, 86, 237, 54, 253, 225, 32, 240, 180, 159, 46, 42, 131, 128, 127, 119, 18, 128, 107, 233, 120, 59, 109, 6, 65, 80, 1, 21, 250, 99, 62, 51, 104, 216, 112, 75, 39, 200, 203, 225, 54, 109, 152, 252, 12, 80, 210, 80, 26, 139, 86, 102, 183, 247, 85, 172, 104, 81, 163, 226, 227, 131, 232, 145, 93, 102, 171, 249, 209, 1, 183, 198, 214, 218, 95, 178, 154, 199, 164, 65, 12, 118, 118, 119, 63, 89, 166, 159, 54, 152, 238, 11, 204, 84, 216, 126, 109, 110, 132, 161, 86, 75, 5, 24, 77, 25, 19, 118, 239, 223, 209 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: -4,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 192, 22, 160, 209, 46, 155, 228, 105, 183, 200, 84, 65, 56, 130, 100, 230, 170, 78, 179, 73, 135, 161, 99, 251, 166, 32, 199, 12, 98, 167, 130, 105, 108, 105, 52, 168, 44, 206, 79, 149, 19, 103, 218, 160, 97, 108, 69, 74, 255, 179, 125, 87, 49, 52, 75, 238, 228, 164, 14, 101, 110, 93, 123, 184 }, new byte[] { 120, 69, 127, 25, 82, 57, 163, 151, 151, 210, 92, 245, 90, 172, 206, 120, 115, 61, 86, 237, 54, 253, 225, 32, 240, 180, 159, 46, 42, 131, 128, 127, 119, 18, 128, 107, 233, 120, 59, 109, 6, 65, 80, 1, 21, 250, 99, 62, 51, 104, 216, 112, 75, 39, 200, 203, 225, 54, 109, 152, 252, 12, 80, 210, 80, 26, 139, 86, 102, 183, 247, 85, 172, 104, 81, 163, 226, 227, 131, 232, 145, 93, 102, 171, 249, 209, 1, 183, 198, 214, 218, 95, 178, 154, 199, 164, 65, 12, 118, 118, 119, 63, 89, 166, 159, 54, 152, 238, 11, 204, 84, 216, 126, 109, 110, 132, 161, 86, 75, 5, 24, 77, 25, 19, 118, 239, 223, 209 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: -3,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 192, 22, 160, 209, 46, 155, 228, 105, 183, 200, 84, 65, 56, 130, 100, 230, 170, 78, 179, 73, 135, 161, 99, 251, 166, 32, 199, 12, 98, 167, 130, 105, 108, 105, 52, 168, 44, 206, 79, 149, 19, 103, 218, 160, 97, 108, 69, 74, 255, 179, 125, 87, 49, 52, 75, 238, 228, 164, 14, 101, 110, 93, 123, 184 }, new byte[] { 120, 69, 127, 25, 82, 57, 163, 151, 151, 210, 92, 245, 90, 172, 206, 120, 115, 61, 86, 237, 54, 253, 225, 32, 240, 180, 159, 46, 42, 131, 128, 127, 119, 18, 128, 107, 233, 120, 59, 109, 6, 65, 80, 1, 21, 250, 99, 62, 51, 104, 216, 112, 75, 39, 200, 203, 225, 54, 109, 152, 252, 12, 80, 210, 80, 26, 139, 86, 102, 183, 247, 85, 172, 104, 81, 163, 226, 227, 131, 232, 145, 93, 102, 171, 249, 209, 1, 183, 198, 214, 218, 95, 178, 154, 199, 164, 65, 12, 118, 118, 119, 63, 89, 166, 159, 54, 152, 238, 11, 204, 84, 216, 126, 109, 110, 132, 161, 86, 75, 5, 24, 77, 25, 19, 118, 239, 223, 209 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: -2,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 192, 22, 160, 209, 46, 155, 228, 105, 183, 200, 84, 65, 56, 130, 100, 230, 170, 78, 179, 73, 135, 161, 99, 251, 166, 32, 199, 12, 98, 167, 130, 105, 108, 105, 52, 168, 44, 206, 79, 149, 19, 103, 218, 160, 97, 108, 69, 74, 255, 179, 125, 87, 49, 52, 75, 238, 228, 164, 14, 101, 110, 93, 123, 184 }, new byte[] { 120, 69, 127, 25, 82, 57, 163, 151, 151, 210, 92, 245, 90, 172, 206, 120, 115, 61, 86, 237, 54, 253, 225, 32, 240, 180, 159, 46, 42, 131, 128, 127, 119, 18, 128, 107, 233, 120, 59, 109, 6, 65, 80, 1, 21, 250, 99, 62, 51, 104, 216, 112, 75, 39, 200, 203, 225, 54, 109, 152, 252, 12, 80, 210, 80, 26, 139, 86, 102, 183, 247, 85, 172, 104, 81, 163, 226, 227, 131, 232, 145, 93, 102, 171, 249, 209, 1, 183, 198, 214, 218, 95, 178, 154, 199, 164, 65, 12, 118, 118, 119, 63, 89, 166, 159, 54, 152, 238, 11, 204, 84, 216, 126, 109, 110, 132, 161, 86, 75, 5, 24, 77, 25, 19, 118, 239, 223, 209 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: -1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 192, 22, 160, 209, 46, 155, 228, 105, 183, 200, 84, 65, 56, 130, 100, 230, 170, 78, 179, 73, 135, 161, 99, 251, 166, 32, 199, 12, 98, 167, 130, 105, 108, 105, 52, 168, 44, 206, 79, 149, 19, 103, 218, 160, 97, 108, 69, 74, 255, 179, 125, 87, 49, 52, 75, 238, 228, 164, 14, 101, 110, 93, 123, 184 }, new byte[] { 120, 69, 127, 25, 82, 57, 163, 151, 151, 210, 92, 245, 90, 172, 206, 120, 115, 61, 86, 237, 54, 253, 225, 32, 240, 180, 159, 46, 42, 131, 128, 127, 119, 18, 128, 107, 233, 120, 59, 109, 6, 65, 80, 1, 21, 250, 99, 62, 51, 104, 216, 112, 75, 39, 200, 203, 225, 54, 109, 152, 252, 12, 80, 210, 80, 26, 139, 86, 102, 183, 247, 85, 172, 104, 81, 163, 226, 227, 131, 232, 145, 93, 102, 171, 249, 209, 1, 183, 198, 214, 218, 95, 178, 154, 199, 164, 65, 12, 118, 118, 119, 63, 89, 166, 159, 54, 152, 238, 11, 204, 84, 216, 126, 109, 110, 132, 161, 86, 75, 5, 24, 77, 25, 19, 118, 239, 223, 209 } });
        }
    }
}
